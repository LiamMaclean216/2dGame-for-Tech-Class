varying vec4 v_color;
varying vec2 v_texCoords;
uniform sampler2D u_texture;
uniform mat4 u_projTrans;

uniform vec3 lightAttenuation[100];
uniform vec2 dimensions;

uniform vec2 lightPos[100];
uniform vec3 lightColor[100];
void main() {
		vec2 pixel=gl_FragCoord.xy/dimensions;
		vec3 color = vec3(0,0,0);
		float distance = 0;
		for(int i = 0;i < 100;i++) {
			if(lightPos[i] == vec2(0,0)) break;
			distance=distance(pixel.xy ,lightPos[i].xy);
		
			float attenuation=(1.0f/(lightAttenuation[i].x+lightAttenuation[i].y*distance+lightAttenuation[i].z*distance*distance));	
		 
        	color += ((texture2D(u_texture, v_texCoords).rgb)) * vec3(attenuation,attenuation,attenuation) * lightColor[i];
		}
        gl_FragColor = vec4(color,((color.x+color.y+color.z)/3 + 0.8) * texture2D(u_texture, v_texCoords).a);
}